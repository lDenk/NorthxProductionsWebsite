
@{
    ViewBag.Title = "Videos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using northxproductions.Models
@model NxVideoProjectsListModel

<br />

<div class="my-video-page-container">
    <div class="my-video-table-data-col1">
        Projects
    </div>
    <div id="videoProjectNames">
        @foreach (NxVideoProjectModel project in Model.Projects)
            {
            <span class="videoProjectName">
                @project.ProjectName
            </span>
        }
    </div>
    <div class="left">
        <div class="inlineBlock">
            @foreach (NxVideoProjectModel project in Model.Projects)
            {
                <table class="noDisp" id="@project.ProjectName.Replace(" ", String.Empty)">
                    @foreach (NxVideo video in project.Project)
                {
                        <tr>
                            <td>
                                <div class="my-video-table-videoname" id="@video.Embed">
                                    @video.Name
                                </div>
                            </td>
                        </tr>
                    }
                </table>
            }
        </div>
        <div id="vid-popup-div" class="my-vid-popup-div inlineBlock">
            <a class="my-vid-popup-x" onclick="hidePopup()">x</a>
            <iframe id="vid-popup-iframe" class="my-vid-popup-iframe"
                    width="640" height="360"
                    src=""
                    frameborder="0"
                    allowfullscreen></iframe>
        </div>
    </div>
</div>

<script>
    document.getElementById('vid-popup-div').style.visibility = 'hidden';


    var videoProjectNames = document.getElementsByClassName("videoProjectName");
    for (var i = 0; i < videoProjectNames.length; i++) {
        videoProjectNames[i].addEventListener("click", functionDelegate(selectProject));
    }

    // Show the table for the Parachute project
    this.elSelectedProjectTable = document.getElementById("Parachute");
    this.elSelectedProjectName = videoProjectNames[0];
    this.switchProjects(this.elSelectedProjectTable.id, this.elSelectedProjectName);
    function videoClick(obj) {
        var s = obj.id;
        document.getElementById('vid-popup-iframe').src = s;
        document.getElementById('vid-popup-div').style.visibility = 'visible';
    }

    function hidePopup() {
        document.getElementById('vid-popup-iframe').src = "";
        document.getElementById('vid-popup-div').style.visibility = 'hidden';
    }

    function selectProject(event) {
        // Summary: Hide previously selected project video names and show currently selected project video names.
        var elementId = event.target.innerText.split(" ").join("");
        if (elementId === this.elSelectedProjectTable.id) {
            return;
        }

        this.switchProjects(elementId, event.target);
    }

    function switchProjects(projectId, elTarget) {
        // Summary: Switch/set selected projects.
        // projectId: The id of the project table to display
        // elTarget: The target element (project name) that we're switching to/setting

        this.elSelectedProjectName.setAttribute("data-selected", "false");
        this.elSelectedProjectName = elTarget;
        this.elSelectedProjectName.setAttribute("data-selected", "true");

        this.elSelectedProjectTable.setAttribute("class", "noDisp");
        this.elSelectedProjectTable = document.getElementById(projectId);
        this.elSelectedProjectTable.removeAttribute("class");
    }

    var _this = this;
    function functionDelegate(delegate) {
        // Summary: Return a function that will call the delegate with the correct context.
        // delegate: function to call when event is triggered.
        return function (event) {
            delegate.call(_this, event);
        }
    }
</script>
